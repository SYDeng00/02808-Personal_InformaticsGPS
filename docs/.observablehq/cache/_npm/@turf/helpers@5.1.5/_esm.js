/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/@turf/helpers@5.1.5/main.es.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var r=6371008.8,e={meters:r,metres:r,millimeters:6371008800,millimetres:6371008800,centimeters:637100880,centimetres:637100880,kilometers:6371.0088,kilometres:6371.0088,miles:3958.761333810546,nauticalmiles:r/1852,inches:39.37*r,yards:5825721.287490856,feet:20902260.511392,radians:1,degrees:57.22891354143274},t={meters:1,metres:1,millimeters:1e3,millimetres:1e3,centimeters:100,centimetres:100,kilometers:.001,kilometres:.001,miles:1/1609.344,nauticalmiles:1/1852,inches:39.37,yards:1/1.0936,feet:3.28084,radians:1/r,degrees:1/111325},n={meters:1,metres:1,millimeters:1e6,millimetres:1e6,centimeters:1e4,centimetres:1e4,kilometers:1e-6,kilometres:1e-6,acres:247105e-9,miles:386e-9,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function o(r,e,t){if(!M(t=t||{}))throw new Error("options is invalid");var n=t.bbox,o=t.id;if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");n&&L(n),o&&T(o);var i={type:"Feature"};return o&&(i.id=o),n&&(i.bbox=n),i.properties=e||{},i.geometry=r,i}function i(r,e,t){if(!M(t=t||{}))throw new Error("options is invalid");var n,o=t.bbox;if(!r)throw new Error("type is required");if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");switch(o&&L(o),r){case"Point":n=s(e).geometry;break;case"LineString":n=f(e).geometry;break;case"Polygon":n=u(e).geometry;break;case"MultiPoint":n=d(e).geometry;break;case"MultiLineString":n=c(e).geometry;break;case"MultiPolygon":n=l(e).geometry;break;default:throw new Error(r+" is invalid")}return o&&(n.bbox=o),n}function s(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!x(r[0])||!x(r[1]))throw new Error("coordinates must contain numbers");return o({type:"Point",coordinates:r},e,t)}function a(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");return h(r.map((function(r){return s(r,e)})),t)}function u(r,e,t){if(!r)throw new Error("coordinates is required");for(var n=0;n<r.length;n++){var i=r[n];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<i[i.length-1].length;s++){if(0===n&&0===s&&!x(i[0][0])||!x(i[0][1]))throw new Error("coordinates must contain numbers");if(i[i.length-1][s]!==i[0][s])throw new Error("First and last Position are not equivalent.")}}return o({type:"Polygon",coordinates:r},e,t)}function w(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");return h(r.map((function(r){return u(r,e)})),t)}function f(r,e,t){if(!r)throw new Error("coordinates is required");if(r.length<2)throw new Error("coordinates must be an array of two or more positions");if(!x(r[0][1])||!x(r[0][1]))throw new Error("coordinates must contain numbers");return o({type:"LineString",coordinates:r},e,t)}function m(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");return h(r.map((function(r){return f(r,e)})),t)}function h(r,e){if(!M(e=e||{}))throw new Error("options is invalid");var t=e.bbox,n=e.id;if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");t&&L(t),n&&T(n);var o={type:"FeatureCollection"};return n&&(o.id=n),t&&(o.bbox=t),o.features=r,o}function c(r,e,t){if(!r)throw new Error("coordinates is required");return o({type:"MultiLineString",coordinates:r},e,t)}function d(r,e,t){if(!r)throw new Error("coordinates is required");return o({type:"MultiPoint",coordinates:r},e,t)}function l(r,e,t){if(!r)throw new Error("coordinates is required");return o({type:"MultiPolygon",coordinates:r},e,t)}function b(r,e,t){if(!r)throw new Error("geometries is required");if(!Array.isArray(r))throw new Error("geometries must be an Array");return o({type:"GeometryCollection",geometries:r},e,t)}function E(r,e){if(null==r||isNaN(r))throw new Error("num is required");if(e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t}function y(r,t){if(null==r)throw new Error("radians is required");if(t&&"string"!=typeof t)throw new Error("units must be a string");var n=e[t||"kilometers"];if(!n)throw new Error(t+" units is invalid");return r*n}function g(r,t){if(null==r)throw new Error("distance is required");if(t&&"string"!=typeof t)throw new Error("units must be a string");var n=e[t||"kilometers"];if(!n)throw new Error(t+" units is invalid");return r/n}function p(r,e){return A(g(r,e))}function v(r){if(null==r)throw new Error("bearing is required");var e=r%360;return e<0&&(e+=360),e}function A(r){if(null==r)throw new Error("radians is required");return 180*(r%(2*Math.PI))/Math.PI}function q(r){if(null==r)throw new Error("degrees is required");return r%360*Math.PI/180}function k(r,e,t){if(null==r)throw new Error("length is required");if(!(r>=0))throw new Error("length must be a positive number");return y(g(r,e),t||"kilometers")}function P(r,e,t){if(null==r)throw new Error("area is required");if(!(r>=0))throw new Error("area must be a positive number");var o=n[e||"meters"];if(!o)throw new Error("invalid original units");var i=n[t||"kilometers"];if(!i)throw new Error("invalid final units");return r/o*i}function x(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}function M(r){return!!r&&r.constructor===Object}function L(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(4!==r.length&&6!==r.length)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach((function(r){if(!x(r))throw new Error("bbox must only contain numbers")}))}function T(r){if(!r)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof r))throw new Error("id must be a number or a string")}function N(){throw new Error("method has been renamed to `radiansToDegrees`")}function O(){throw new Error("method has been renamed to `degreesToRadians`")}function S(){throw new Error("method has been renamed to `lengthToDegrees`")}function j(){throw new Error("method has been renamed to `lengthToRadians`")}function F(){throw new Error("method has been renamed to `radiansToLength`")}function I(){throw new Error("method has been renamed to `bearingToAzimuth`")}function R(){throw new Error("method has been renamed to `convertLength`")}export{n as areaFactors,I as bearingToAngle,v as bearingToAzimuth,P as convertArea,R as convertDistance,k as convertLength,O as degrees2radians,q as degreesToRadians,S as distanceToDegrees,j as distanceToRadians,r as earthRadius,e as factors,o as feature,h as featureCollection,i as geometry,b as geometryCollection,x as isNumber,M as isObject,p as lengthToDegrees,g as lengthToRadians,f as lineString,m as lineStrings,c as multiLineString,d as multiPoint,l as multiPolygon,s as point,a as points,u as polygon,w as polygons,N as radians2degrees,A as radiansToDegrees,F as radiansToDistance,y as radiansToLength,E as round,t as unitsFactors,L as validateBBox,T as validateId};export default null;
